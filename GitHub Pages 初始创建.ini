
cd autoexporttool-docs

# 配置Git加速 // 
--编辑全局配置加速方式1
git config --global url."https://hub.fastgit.xyz/".insteadOf https://github.com/
git config --global http.https://github.com.proxy http://127.0.0.1:1080  # 如有代理
-- 清华镜像加速方式2 （下载安装会提速，准确率高--一次性 PIP 或者 拉取克隆）
git config --global url."https://mirrors.tuna.tsinghua.edu.cn/git/".insteadOf https://github.com/
git config --global url."https://mirrors.tuna.tsinghua.edu.cn/git/".insteadOf git://github.com/

git config --global user.name "AniYQiu"  (名称可根据自己喜好来指定，GIT 需要 用户名 和 邮箱设置，才能上传拉取)
git config --global user.email "240811498@qq.com"

git config --global user.name "ladyicefox"
git config --global user.email "240811498@qq.com"

git config --global user.name   # 查看全局用户名
git config --global user.email  # 查看全局邮箱

# github 部分 需要初始设置 (个人github账户）的仓库命名规则：
https://<username>（不带符号直接是GIThub的默认英文账户名称）.github.io/autoexporttool-docs（工程目录名）/  # 专属域名格式 - 注意 这是 最终会生成的推送到 GITPAGES 的 网址 （由 MKDOWNDOCS  的 方式 ，推送到 github ，并 部署到 GitHub Pages）
类似---：https://ladyicefox.github.io/autoexporttool-docs/  （后期推送部署完成后就是这个形式的网站域名）

本地创建：autoexporttool-docs   # 项目文档格式 （ 命名成工程名称 ） 创建好后 继续 操作...

# --拉取克隆 GIT 工程 目录 
git remote add origin https://github.com/ladyicefox（GIThub的默认英文账户名称）/autoexporttool-docs.git 

--=  git remote add origin https://ladyicefox.github.io/autoexporttool-docs/

# 1. 配置用户信息（只需执行一次） 开始操作 保证先设置好 基础 GIT 部分 需要的 提交， 更新，推送，部署 等  需要 的用户名和邮箱，用户名随便起；
git config --global user.name "动画师小明"
git config --global user.email "animator@example.com"

# 2. 进入项目目录
cd C:\Users\Administrator\autoexporttool-docs
git init
# 3. 添加所有文件
git add .

# 4. 提交更改
git commit -m "初始提交：创建动画插件文档项目"
...此类标题如需要自己手动编辑，一般用智能一键提交（自动备注提交信息内容，适合后期创建好工程后（需要的基础Markdown文件），更新维护-便捷，快速，上手快！！！不用手动操作粘贴命令）
git commit -m "初始提交"
# 5. 验证提交
git log --oneline
# 应该看到类似: 9f5a2a1 (HEAD -> main) 初始提交：创建动画插件文档项目

# 添加远程仓库
git remote add origin https://github.com/ladyicefox/autoexporttool-docs.git

# 6. 启动MkDocs / 本地预览 （查看 创建的 MkDocs 本地 静态网页 内容 是否更新 以及 查看 效果）
mkdocs serve

# 部署到GitHub Pages
mkdocs gh-deploy  --  默认 提交方式 / 或者 python -m mkdocs gh-deploy  (pyth 环境变量未设置正确的情况下才采用，后续维护更新的工具已经解决了这类问题，但是PYTHON 没安装要先手动安装一下！！！)

# 推荐使用项目文档格式：
git init autoexporttool-docs
cd autoexporttool-docs

# 部署到GitHub Pages / 完全量 ，带--force 代表强制部署）
mkdocs gh-deploy     --force

# 推送源码到GitHub仓库
git remote add origin https://github.com/你的用户名/autoexporttool-docs.git
git push -u origin main
# 最终完成的文档网址
访问地址：https://ladyicefox.github.io/autoexporttool-docs/